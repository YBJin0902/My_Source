/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * File Name          : STM32TouchController.cpp
  ******************************************************************************
  * This file is generated by TouchGFX Generator 4.19.1.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2022 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* USER CODE BEGIN STM32TouchController */

#include "stm32f4xx_hal.h"
#include <STM32TouchController.hpp>
#include "main.h"

extern "C"
{
    extern I2C_HandleTypeDef hi2c1;
    extern void MX_I2C1_Init(void);
}

uint8_t buf[4];
int32_t xVal;
int32_t yVal;
bool touchReady = false;

void STM32TouchController::init()
{

}

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
    /**
     * By default sampleTouch returns false,
     * return true if a touch has been detected, otherwise false.
     *
     * Coordinates are passed to the caller by reference by x and y.
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */

    if (touchReady)
    {
        x = xVal;
        y = yVal;
        touchReady = false;
        return true;
    }
    else
    {
        return false;
    }
}

void readTouchInput()
{
    // Set receive register to P1XH
    uint8_t tReg = 0x03;
    HAL_I2C_Master_Transmit(&hi2c1, 0x70, &tReg, 1, HAL_MAX_DELAY);
    //Receive P1XH, P1XL, P1YH and P1YL
    HAL_I2C_Master_Receive(&hi2c1, 0x70, buf, 4, HAL_MAX_DELAY);
    yVal = 239;
    yVal -= (uint16_t)(buf[0] & 0xf) << 8;
    yVal -= buf [1];
    xVal = ((uint16_t)(buf[2]  & 0xf) << 8);
    xVal += buf [3];
    touchReady = true;
}
/* USER CODE END STM32TouchController */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
